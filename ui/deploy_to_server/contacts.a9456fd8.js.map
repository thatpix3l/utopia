{"mappings":"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","sources":["<anon>","src/scripts/Contacts.ts"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire2d0a\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire2d0a\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $6KOho = parcelRequire(\"6KOho\");\n\nvar $3rinH = parcelRequire(\"3rinH\");\n\nvar $ildEr = parcelRequire(\"ildEr\");\n\nvar $dzOrt = parcelRequire(\"dzOrt\");\n(0, (/*@__PURE__*/$parcel$interopDefault($6KOho)))(()=>{\n    const user = (0, $3rinH.getUserFromCookie)();\n    if (!user.id) {\n        // comment these two lines while testing\n        window.location.href = \"/\";\n        return;\n    }\n    const searchButton = (0, (/*@__PURE__*/$parcel$interopDefault($6KOho)))(\"#searchButton\");\n    const searchInput = (0, (/*@__PURE__*/$parcel$interopDefault($6KOho)))(\"#searchInput\");\n    const contactsTable = (0, (/*@__PURE__*/$parcel$interopDefault($6KOho)))(\"#contactsTable\");\n    const pagesHolder = (0, (/*@__PURE__*/$parcel$interopDefault($6KOho)))(\"#pagesHolder\");\n    const addOverlay = (0, (/*@__PURE__*/$parcel$interopDefault($6KOho)))(\"#addOverlay\");\n    const addInputs = addOverlay.find(\"input:is([type='text']\");\n    const addFirstNameInput = (0, (/*@__PURE__*/$parcel$interopDefault($6KOho)))(\"#addFirstNameInput\");\n    const addLastNameInput = (0, (/*@__PURE__*/$parcel$interopDefault($6KOho)))(\"#addLastNameInput\");\n    const addPhoneInput = (0, (/*@__PURE__*/$parcel$interopDefault($6KOho)))(\"#addPhoneInput\");\n    const addEmailInput = (0, (/*@__PURE__*/$parcel$interopDefault($6KOho)))(\"#addEmailInput\");\n    const addErrorHolder = (0, (/*@__PURE__*/$parcel$interopDefault($6KOho)))(\"#addErrorHolder\");\n    const addConfirmButton = (0, (/*@__PURE__*/$parcel$interopDefault($6KOho)))(\"#addConfirmButton\");\n    // const addCancelButton = $<HTMLButtonElement>(\"#addCancelButton\");\n    const editOverlay = (0, (/*@__PURE__*/$parcel$interopDefault($6KOho)))(\"#editOverlay\");\n    const editInputs = editOverlay.find(\"input:is([type='text']\");\n    const editFirstNameInput = (0, (/*@__PURE__*/$parcel$interopDefault($6KOho)))(\"#editFirstNameInput\");\n    const editLastNameInput = (0, (/*@__PURE__*/$parcel$interopDefault($6KOho)))(\"#editLastNameInput\");\n    const editPhoneInput = (0, (/*@__PURE__*/$parcel$interopDefault($6KOho)))(\"#editPhoneInput\");\n    const editEmailInput = (0, (/*@__PURE__*/$parcel$interopDefault($6KOho)))(\"#editEmailInput\");\n    const editErrorHolder = (0, (/*@__PURE__*/$parcel$interopDefault($6KOho)))(\"#editErrorHolder\");\n    const editConfirmButton = (0, (/*@__PURE__*/$parcel$interopDefault($6KOho)))(\"#editConfirmButton\");\n    // start disabled\n    addConfirmButton.prop(\"disabled\", true);\n    editConfirmButton.prop(\"disabled\", true);\n    (0, (/*@__PURE__*/$parcel$interopDefault($6KOho)))(\"#logoutButton\").on(\"click\", ()=>{\n        (0, $3rinH.clearCookie)();\n        window.location.href = \"/\";\n    });\n    let contacts = [];\n    let activePage = 0;\n    let activeContactID = 0;\n    function loadPage(page = 1) {\n        activePage = page;\n        // console.log(contacts);\n        const pageButtons = pagesHolder.children(\"button\");\n        pageButtons.removeClass(\"selected\");\n        pageButtons.eq(page - 1).addClass(\"selected\");\n        contactsTable.children(\":not(:first-child)\").remove();\n        const offset = (page - 1) * 10;\n        for(let i = offset; i < offset + 10 && i < contacts.length; i++){\n            const contact = contacts[i];\n            let row = document.createElement(\"div\");\n            row.classList.add(\"row\");\n            // $(row).data(\"id\", contact.id);\n            let name = document.createElement(\"p\");\n            name.innerText = `${contact.firstName} ${contact.lastName}`;\n            let email = document.createElement(\"p\");\n            email.innerText = contact.email;\n            let phone = document.createElement(\"p\");\n            phone.innerText = contact.phone;\n            let actions = document.createElement(\"div\");\n            let editButton = document.createElement(\"button\");\n            editButton.innerHTML = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M20.71 7.04c.39-.39.39-1.04 0-1.41l-2.34-2.34c-.37-.39-1.02-.39-1.41 0l-1.84 1.83l3.75 3.75M3 17.25V21h3.75L17.81 9.93l-3.75-3.75z\"/></svg>`;\n            (0, (/*@__PURE__*/$parcel$interopDefault($6KOho)))(editButton).on(\"click\", ()=>{\n                editOverlay.removeClass(\"inactive\");\n                activeContactID = contact.id;\n                editFirstNameInput.val(contact.firstName);\n                editLastNameInput.val(contact.lastName);\n                editPhoneInput.val(contact.phone);\n                editEmailInput.val(contact.email);\n            });\n            let deleteButton = document.createElement(\"button\");\n            deleteButton.innerHTML = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M19 4h-3.5l-1-1h-5l-1 1H5v2h14M6 19a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V7H6z\"/></svg>`;\n            (0, (/*@__PURE__*/$parcel$interopDefault($6KOho)))(deleteButton).on(\"click\", ()=>{\n                if (confirm(`Warning, this will delete the contact with the name '${contact.firstName} ${contact.lastName}'.`)) (0, $ildEr.request)(\"DeleteContact\", {\n                    id: contact.id,\n                    user_id: user.id\n                }, (response)=>{\n                    console.log(response);\n                    searchButton.trigger(\"click\");\n                }, (errorMessage)=>{\n                    console.log(errorMessage);\n                });\n            });\n            actions.append(editButton, deleteButton);\n            row.append(name, email, phone, actions);\n            contactsTable.append(row);\n        }\n    }\n    searchButton.on(\"click\", ()=>{\n        (0, $ildEr.request)(\"SearchName\", {\n            user_id: user.id,\n            search: searchInput.val() ?? \"\"\n        }, (response)=>{\n            contacts = response.results;\n            pagesHolder.empty();\n            let pageCount = Math.max(Math.ceil(contacts.length / 10), 1);\n            for(let i = 1; i <= pageCount; i++){\n                let button = document.createElement(\"button\");\n                button.innerText = i.toString();\n                (0, (/*@__PURE__*/$parcel$interopDefault($6KOho)))(button).on(\"click\", ()=>{\n                    console.log(\"page\", i);\n                    loadPage(i);\n                });\n                pagesHolder.append(button);\n            }\n            loadPage(Math.min(activePage, pageCount) || 1);\n        }, (error)=>{\n            contacts = [];\n            pagesHolder.empty();\n            let button = document.createElement(\"button\");\n            button.innerText = \"1\";\n            (0, (/*@__PURE__*/$parcel$interopDefault($6KOho)))(button).on(\"click\", ()=>{\n                console.log(\"page\", 1);\n                loadPage(1);\n            });\n            pagesHolder.append(button);\n            loadPage(1);\n        });\n    });\n    searchInput.on(\"keyup\", (event)=>{\n        if (event.key === \"Enter\") searchButton.trigger(\"click\");\n    });\n    (0, (/*@__PURE__*/$parcel$interopDefault($6KOho)))(\"#addButton\").on(\"click\", ()=>{\n        addOverlay.removeClass(\"inactive\");\n    });\n    (0, (/*@__PURE__*/$parcel$interopDefault($6KOho)))(\"#addCancelButton\").on(\"click\", ()=>{\n        addOverlay.addClass(\"inactive\");\n    });\n    // returns whether there are errors\n    const validateAddContact = ()=>{\n        const errors = (0, $dzOrt.validatePartialName)(addFirstNameInput.val() ?? \"\", \"First\").concat((0, $dzOrt.validatePartialName)(addLastNameInput.val() ?? \"\", \"Last\"), (0, $dzOrt.validatePhone)(addPhoneInput.val() ?? \"\"), (0, $dzOrt.validateEmail)(addEmailInput.val() ?? \"\"));\n        // console.log(errors);\n        addErrorHolder.html(errors.join(\"<br />\"));\n        addConfirmButton.prop(\"disabled\", !!errors.length);\n        return !!errors.length;\n    };\n    const addContact = ()=>{\n        // console.log(loginUsernameInput.val(), loginPasswordInput.val());\n        (0, $ildEr.request)(\"AddContact\", {\n            user_id: user.id,\n            name_first: addFirstNameInput.val() ?? \"\",\n            name_last: addLastNameInput.val() ?? \"\",\n            phone: addPhoneInput.val() ?? \"\",\n            email: addEmailInput.val() ?? \"\"\n        }, (response)=>{\n            console.log(response);\n            searchButton.trigger(\"click\");\n        }, (errorMessage)=>{\n            console.log(errorMessage);\n        });\n        addInputs.val(\"\");\n        addConfirmButton.prop(\"disabled\", true); // reset its state since all inputs got wiped\n        addOverlay.addClass(\"inactive\");\n    };\n    addInputs.on(\"focus\", (event)=>{\n        validateAddContact();\n    });\n    addInputs.on(\"keyup\", (event)=>{\n        if (validateAddContact()) return;\n        if (event.key === \"Enter\") addContact();\n    });\n    addInputs.on(\"blur\", (event)=>{\n        addErrorHolder.text(\"\");\n    });\n    addConfirmButton.on(\"click\", addContact);\n    (0, (/*@__PURE__*/$parcel$interopDefault($6KOho)))(\"#editCancelButton\").on(\"click\", ()=>{\n        editOverlay.addClass(\"inactive\");\n    });\n    // returns whether there are errors\n    const validateEditContact = ()=>{\n        const errors = (0, $dzOrt.validatePartialName)(editFirstNameInput.val() ?? \"\", \"First\").concat((0, $dzOrt.validatePartialName)(editLastNameInput.val() ?? \"\", \"Last\"), (0, $dzOrt.validatePhone)(editPhoneInput.val() ?? \"\"), (0, $dzOrt.validateEmail)(editEmailInput.val() ?? \"\"));\n        // console.log(errors);\n        editErrorHolder.html(errors.join(\"<br />\"));\n        editConfirmButton.prop(\"disabled\", !!errors.length);\n        return !!errors.length;\n    };\n    const editContact = ()=>{\n        // console.log(loginUsernameInput.val(), loginPasswordInput.val());\n        (0, $ildEr.request)(\"EditContact\", {\n            id: activeContactID,\n            user_id: user.id,\n            name_first: editFirstNameInput.val() ?? \"\",\n            name_last: editLastNameInput.val() ?? \"\",\n            phone: editPhoneInput.val() ?? \"\",\n            email: editEmailInput.val() ?? \"\"\n        }, (response)=>{\n            console.log(response);\n            searchButton.trigger(\"click\");\n        }, (errorMessage)=>{\n            console.log(errorMessage);\n        });\n        activeContactID = 0;\n        editInputs.val(\"\");\n        editConfirmButton.prop(\"disabled\", true); // reset its state since all inputs got wiped\n        editOverlay.addClass(\"inactive\");\n    };\n    editInputs.on(\"focus\", (event)=>{\n        validateEditContact();\n    });\n    editInputs.on(\"keyup\", (event)=>{\n        if (validateEditContact()) return;\n        if (event.key === \"Enter\") editContact();\n    });\n    editInputs.on(\"blur\", (event)=>{\n        editErrorHolder.text(\"\");\n    });\n    editConfirmButton.on(\"click\", editContact);\n});\n\n\n//# sourceMappingURL=contacts.a9456fd8.js.map\n","import $ from \"jquery\";\r\nimport { clearCookie, getUserFromCookie } from \"./Cookies\";\r\n// import { user } from \"./Account\";\r\nimport { request } from \"./API\";\r\nimport { Contact } from \"./types/Entity\";\r\nimport { validateEmail, validatePartialName, validatePhone } from \"./Validation\";\r\n\r\n\r\n$(() => {\r\n    const user = getUserFromCookie();\r\n    if (!user.id) {\r\n        // comment these two lines while testing\r\n        window.location.href = \"/\";\r\n        return;\r\n    }\r\n    const searchButton = $<HTMLButtonElement>(\"#searchButton\");\r\n    const searchInput = $<HTMLInputElement>(\"#searchInput\");\r\n\r\n    const contactsTable = $<HTMLDivElement>(\"#contactsTable\");\r\n\r\n    const pagesHolder = $<HTMLDivElement>(\"#pagesHolder\");\r\n\r\n    const addOverlay = $<HTMLDivElement>(\"#addOverlay\");\r\n    const addInputs = addOverlay.find(\"input:is([type='text']\");\r\n    const addFirstNameInput = $<HTMLInputElement>(\"#addFirstNameInput\");\r\n    const addLastNameInput = $<HTMLInputElement>(\"#addLastNameInput\");\r\n    const addPhoneInput = $<HTMLInputElement>(\"#addPhoneInput\");\r\n    const addEmailInput = $<HTMLInputElement>(\"#addEmailInput\");\r\n    const addErrorHolder = $<HTMLParagraphElement>(\"#addErrorHolder\");\r\n    const addConfirmButton = $<HTMLButtonElement>(\"#addConfirmButton\");\r\n    // const addCancelButton = $<HTMLButtonElement>(\"#addCancelButton\");\r\n\r\n    const editOverlay = $<HTMLDivElement>(\"#editOverlay\");\r\n    const editInputs = editOverlay.find(\"input:is([type='text']\");\r\n    const editFirstNameInput = $<HTMLInputElement>(\"#editFirstNameInput\");\r\n    const editLastNameInput = $<HTMLInputElement>(\"#editLastNameInput\");\r\n    const editPhoneInput = $<HTMLInputElement>(\"#editPhoneInput\");\r\n    const editEmailInput = $<HTMLInputElement>(\"#editEmailInput\");\r\n    const editErrorHolder = $<HTMLParagraphElement>(\"#editErrorHolder\");\r\n    const editConfirmButton = $<HTMLButtonElement>(\"#editConfirmButton\");\r\n\r\n    // start disabled\r\n    addConfirmButton.prop(\"disabled\", true);\r\n    editConfirmButton.prop(\"disabled\", true);\r\n\r\n    $(\"#logoutButton\").on(\"click\", () => {\r\n        clearCookie();\r\n        window.location.href = \"/\";\r\n    });\r\n\r\n    let contacts: Contact[] = [];\r\n    let activePage = 0;\r\n    let activeContactID = 0;\r\n    function loadPage(page = 1) {\r\n        activePage = page;\r\n\r\n        // console.log(contacts);\r\n\r\n        const pageButtons = pagesHolder.children(\"button\");\r\n        pageButtons.removeClass(\"selected\");\r\n        pageButtons.eq(page-1).addClass(\"selected\");\r\n\r\n        contactsTable.children(\":not(:first-child)\").remove();\r\n\r\n        const offset = (page - 1) * 10;\r\n        for (let i = offset; i < offset + 10 && i < contacts.length; i++) {\r\n            const contact = contacts[i];\r\n\r\n            let row = document.createElement(\"div\");\r\n            row.classList.add(\"row\");\r\n            // $(row).data(\"id\", contact.id);\r\n\r\n            let name = document.createElement(\"p\");\r\n            name.innerText = `${contact.firstName} ${contact.lastName}`;\r\n\r\n            let email = document.createElement(\"p\");\r\n            email.innerText = contact.email;\r\n\r\n            let phone = document.createElement(\"p\");\r\n            phone.innerText = contact.phone;\r\n\r\n            let actions = document.createElement(\"div\");\r\n            let editButton = document.createElement(\"button\");\r\n            editButton.innerHTML = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M20.71 7.04c.39-.39.39-1.04 0-1.41l-2.34-2.34c-.37-.39-1.02-.39-1.41 0l-1.84 1.83l3.75 3.75M3 17.25V21h3.75L17.81 9.93l-3.75-3.75z\"/></svg>`;\r\n            $(editButton).on(\"click\", () => {\r\n                editOverlay.removeClass(\"inactive\");\r\n\r\n                activeContactID = contact.id;\r\n                editFirstNameInput.val(contact.firstName);\r\n                editLastNameInput.val(contact.lastName);\r\n                editPhoneInput.val(contact.phone);\r\n                editEmailInput.val(contact.email);\r\n            });\r\n            let deleteButton = document.createElement(\"button\");\r\n            deleteButton.innerHTML = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M19 4h-3.5l-1-1h-5l-1 1H5v2h14M6 19a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V7H6z\"/></svg>`;\r\n            $(deleteButton).on(\"click\", () => {\r\n                if (confirm(`Warning, this will delete the contact with the name '${contact.firstName} ${contact.lastName}'.`)) {\r\n                    request(\"DeleteContact\",\r\n                        {\r\n                            id: contact.id,\r\n                            user_id: user.id,\r\n                        },\r\n                        (response) => {\r\n                            console.log(response);\r\n                            searchButton.trigger(\"click\");\r\n                        },\r\n                        (errorMessage) => {\r\n                            console.log(errorMessage);\r\n                        });\r\n                }\r\n            });\r\n            actions.append(editButton, deleteButton);\r\n\r\n            row.append(name, email, phone, actions);\r\n\r\n            contactsTable.append(row);\r\n        }\r\n    }\r\n\r\n    searchButton.on(\"click\", () => {\r\n        request(\"SearchName\",\r\n            { user_id: user.id, search: searchInput.val() ?? \"\" },\r\n            (response) => {\r\n                contacts = response.results;\r\n\r\n                pagesHolder.empty();\r\n                let pageCount = Math.max(Math.ceil(contacts.length / 10), 1);\r\n                for (let i = 1; i <= pageCount; i++) {\r\n                    let button = document.createElement(\"button\");\r\n                    button.innerText = i.toString();\r\n                    $(button).on(\"click\", () => {\r\n                        console.log(\"page\", i);\r\n                        loadPage(i);\r\n                    });\r\n                    pagesHolder.append(button);\r\n                }\r\n\r\n                loadPage(Math.min(activePage, pageCount) || 1);\r\n            },\r\n            (error) => {\r\n                contacts = [];\r\n\r\n                pagesHolder.empty();\r\n                let button = document.createElement(\"button\");\r\n                button.innerText = \"1\";\r\n                $(button).on(\"click\", () => {\r\n                    console.log(\"page\", 1);\r\n                    loadPage(1);\r\n                });\r\n                pagesHolder.append(button);\r\n\r\n                loadPage(1);\r\n            }\r\n        );\r\n    });\r\n    searchInput.on(\"keyup\", (event) => {\r\n        if (event.key === \"Enter\") {\r\n            searchButton.trigger(\"click\");\r\n        }\r\n    });\r\n\r\n    $(\"#addButton\").on(\"click\", () => {\r\n        addOverlay.removeClass(\"inactive\");\r\n    });\r\n\r\n    $(\"#addCancelButton\").on(\"click\", () => {\r\n        addOverlay.addClass(\"inactive\");\r\n    });\r\n\r\n    // returns whether there are errors\r\n    const validateAddContact = () => {\r\n        const errors = validatePartialName(addFirstNameInput.val() ?? \"\", \"First\").concat(\r\n            validatePartialName(addLastNameInput.val() ?? \"\", \"Last\"),\r\n            validatePhone(addPhoneInput.val() ?? \"\"),\r\n            validateEmail(addEmailInput.val() ?? \"\"),\r\n        );\r\n        // console.log(errors);\r\n\r\n        addErrorHolder.html(errors.join(\"<br />\"));\r\n        addConfirmButton.prop(\"disabled\", !!errors.length);\r\n\r\n        return !!errors.length;\r\n    };\r\n\r\n    const addContact = () => {\r\n        // console.log(loginUsernameInput.val(), loginPasswordInput.val());\r\n        request(\"AddContact\",\r\n            {\r\n                user_id: user.id,\r\n                name_first: addFirstNameInput.val() ?? \"\",\r\n                name_last: addLastNameInput.val() ?? \"\",\r\n                phone: addPhoneInput.val() ?? \"\",\r\n                email: addEmailInput.val() ?? \"\",\r\n            },\r\n            (response) => {\r\n                console.log(response);\r\n                searchButton.trigger(\"click\");\r\n            },\r\n            (errorMessage) => {\r\n                console.log(errorMessage);\r\n            });\r\n\r\n        addInputs.val(\"\");\r\n        addConfirmButton.prop(\"disabled\", true); // reset its state since all inputs got wiped\r\n        addOverlay.addClass(\"inactive\");\r\n    };\r\n\r\n    addInputs.on(\"focus\", (event) => {\r\n        validateAddContact();\r\n    });\r\n    addInputs.on(\"keyup\", (event) => {\r\n        if (validateAddContact()) {\r\n            return;\r\n        }\r\n\r\n        if (event.key === \"Enter\") {\r\n            addContact();\r\n        }\r\n    });\r\n    addInputs.on(\"blur\", (event) => {\r\n        addErrorHolder.text(\"\");\r\n    });\r\n\r\n    addConfirmButton.on(\"click\", addContact);\r\n\r\n\r\n    $(\"#editCancelButton\").on(\"click\", () => {\r\n        editOverlay.addClass(\"inactive\");\r\n    });\r\n\r\n    // returns whether there are errors\r\n    const validateEditContact = () => {\r\n        const errors = validatePartialName(editFirstNameInput.val() ?? \"\", \"First\").concat(\r\n            validatePartialName(editLastNameInput.val() ?? \"\", \"Last\"),\r\n            validatePhone(editPhoneInput.val() ?? \"\"),\r\n            validateEmail(editEmailInput.val() ?? \"\"),\r\n        );\r\n        // console.log(errors);\r\n\r\n        editErrorHolder.html(errors.join(\"<br />\"));\r\n        editConfirmButton.prop(\"disabled\", !!errors.length);\r\n\r\n        return !!errors.length;\r\n    };\r\n\r\n    const editContact = () => {\r\n        // console.log(loginUsernameInput.val(), loginPasswordInput.val());\r\n        request(\"EditContact\",\r\n            {\r\n                id: activeContactID,\r\n                user_id: user.id,\r\n                name_first: editFirstNameInput.val() ?? \"\",\r\n                name_last: editLastNameInput.val() ?? \"\",\r\n                phone: editPhoneInput.val() ?? \"\",\r\n                email: editEmailInput.val() ?? \"\",\r\n            },\r\n            (response) => {\r\n                console.log(response);\r\n                searchButton.trigger(\"click\");\r\n            },\r\n            (errorMessage) => {\r\n                console.log(errorMessage);\r\n            });\r\n\r\n        activeContactID = 0;\r\n        editInputs.val(\"\");\r\n        editConfirmButton.prop(\"disabled\", true); // reset its state since all inputs got wiped\r\n        editOverlay.addClass(\"inactive\");\r\n    };\r\n\r\n    editInputs.on(\"focus\", (event) => {\r\n        validateEditContact();\r\n    });\r\n    editInputs.on(\"keyup\", (event) => {\r\n        if (validateEditContact()) {\r\n            return;\r\n        }\r\n\r\n        if (event.key === \"Enter\") {\r\n            editContact();\r\n        }\r\n    });\r\n    editInputs.on(\"blur\", (event) => {\r\n        editErrorHolder.text(\"\");\r\n    });\r\n\r\n    editConfirmButton.on(\"click\", editContact);\r\n});\r\n"],"names":["$parcel$interopDefault","a","__esModule","default","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$6KOho","$3rinH","$ildEr","$dzOrt","user","getUserFromCookie","window","location","href","searchButton","searchInput","contactsTable","pagesHolder","addOverlay","addInputs","find","addFirstNameInput","addLastNameInput","addPhoneInput","addEmailInput","addErrorHolder","addConfirmButton","editOverlay","editInputs","editFirstNameInput","editLastNameInput","editPhoneInput","editEmailInput","editErrorHolder","editConfirmButton","prop","on","clearCookie","contacts","activePage","activeContactID","loadPage","page","pageButtons","children","removeClass","eq","addClass","remove","offset","i","length","contact","row","document","createElement","classList","add","name","innerText","firstName","lastName","email","phone","actions","editButton","innerHTML","val","deleteButton","confirm","request","user_id","response","console","log","trigger","errorMessage","append","search","results","empty","pageCount","Math","max","ceil","button","toString","min","error","event","key","validateAddContact","errors","validatePartialName","concat","validatePhone","validateEmail","html","join","addContact","name_first","name_last","text","validateEditContact","editContact"],"version":3,"file":"contacts.a9456fd8.js.map"}